struct Token {
    string Value;
    string File;
    int Type;
    int Line;
    int Col;
    string Fingerprint;
}

string PUBLIC_getTokenErrPrefix(Token tok) {
    if (tok == null) return "";
    return "[" + tok.File + " Line " + Core.IntToString(tok.Line) + " Col " + Core.IntToString(tok.Col) + "] ";
}

Token Token_new(string value, int type, string file, int line, int col) {
    return new Token(value, file, type, line, col, null);
}

string Token_getFingerprint(Token t) {
    if (t.Fingerprint == null)
    {
        t.Fingerprint = Core.StringConcatAll(t.File, ",", Core.IntToString(t.Line), ",", Core.IntToString(t.Col));
    }
    return t.Fingerprint;
}

Token createFakeToken(TokenStream tokens, int type, string value, int line, int col) {
    return Token_new(value, type, tokens.file, line, col);
}


Token createFakeTokenFromTemplate(Token template, string value, int tokenType) {
    return Token_new(
        value,
        tokenType,
        template.File,
        template.Line,
        template.Col);
}
