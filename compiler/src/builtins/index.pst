@import("builtins/gen_builtins.pst");

string GetBuiltinRawStoredString(string m) {

    if (m == "builtins") return GEN_BUILTINS_builtins();
    if (m == "base64") return GEN_BUILTINS_base64();
    if (m == "json") return GEN_BUILTINS_json();
    if (m == "math") return GEN_BUILTINS_math();
    if (m == "random") return GEN_BUILTINS_random();
    if (m == "textencoding") return GEN_BUILTINS_textencoding();
    if (m == "xml") return GEN_BUILTINS_xml();

    return null;
}

string GetSourceForBuiltinModule(string moduleName) {
    string code = GetBuiltinRawStoredString(moduleName);
    if (code == null) {
        fail(moduleName); // module not found
        return null;
    }

    // swap out common strings to further reduce the footprint size.
    return code
        .replace("@1", "function ")
        .replace("@2", " { constructor(m=null):base(m){} }")
        .replace("@3", "@public class ")
        .replace("@4", "return ")
        .replace("@5", "@public function ")
        .replace("@6", "Exception : Exception")
    ;
}

bool IsBuiltInModule(string moduleId) {
    return moduleId != "builtins" && GetBuiltinRawStoredString(moduleId) != null;
}
