import base64;
import json;
import math;
import testlib -> *;

function main(args) {
    runTest();
}

function runTest() {

    assertFloatEqual(0.8414709848078965, math.sin(1));
    assertFloatEqual(0.5403023058681398, math.cos(1));
    assertFloatEqual(1.5574077246549023, math.tan(1));
    assertFloatEqual(0.5235987755982989, math.arcsin(.5));
    assertFloatEqual(1.0471975511965979, math.arccos(.5));
    assertFloatEqual(0.4636476090008061, math.arctan(.5));
    assertFloatEqual(0.4636476090008061, math.arctan(.5, 1));
    assertFloatEqual(0.4636476090008061, math.arctan(1, 2));
    assertFloatEqual(0.9542425094393249, math.log10(9));
    assertFloatEqual(3.1699250014423126, math.log2(9));
    assertFloatEqual(2.1972245773362196, math.ln(9));
    assertFloatEqual(3.0, math.sqrt(9));
    assertFloatEqual(3.1622776601683795, math.sqrt(10));

    assertStrEqual(1, math.sign(9));
    assertStrEqual(-1, math.sign(-9));
    assertStrEqual(0, math.sign(0));
    assertStrEqual(0, math.abs(0));
    assertStrEqual(3, math.abs(-3));
    assertStrEqual(3, math.abs(3));

    msg = "Hello, World!";
    msgB64 = base64.stringToBase64(msg);
    assertStrEqual('SGVsbG8sIFdvcmxkIQ==', msgB64);

    msg = base64.base64ToUtf8String(msgB64);
    assertStrEqual("Hello, World!", msg);

    msg = [1, 2, 3, 4, 5, 6, 7, 253, 254, 255];
    msgB64 = base64.bytesToBase64(msg);
    assertStrEqual('AQIDBAUGB/3+/w==', msgB64);

    webB64 = base64.bytesToBase64(msg, true);
    assertStrEqual('AQIDBAUGB_3-_w==', webB64);

    msg = base64.base64ToBytes(msgB64);
    assertStrEqual('1 2 3 4 5 6 7 253 254 255', msg.join(' '));

    // TOOD: needs to be fixed in the Pastel layer to accept web-safe base64.
    // msg = base64.base64ToBytes(webB64);
    // assertStrEqual('1 2 3 4 5 6 7 253 254 255', msg.join(' '));

    // TODO: implement JSON methods for real.

    v = { "foo": 42 };
    encoded = json.jsonSerialize(v);
    // assertStrEqual(encoded, '{ "foo": 42 }');
    roundtrip = json.jsonParse(encoded);
    // assertStrEqual(roundtrip['foo'], 42);

    print("ALL DONE");
}
